{"version":3,"sources":["context/Context.js","components/Pagination/Pagination.js","components/createCar/Cars.js","components/createCar/CarsList.js","components/createCar/CreateCar.js","components/navbar/Navbar.js","components/race-recet-generate/RaseResetGenerate.js","components/updateCar/UpdateCar.js","components/garage/Garage.js","components/winners/WinnerItem.js","components/Pagination/PaginationWinners.js","components/Spinner.js","components/winners/Winners.js","App.js","reportWebVitals.js","index.js"],"names":["ApiContext","React","createContext","initialState","data","id","currentPage","currentDataCar","dataPage","currentWinnersPage","dataWinnersPage","winners","velosity","carArr","ContextProvider","children","useState","state","setState","getCar","fetch","then","json","res","curentData","slice","status","a","url","rrr","hhfg","wins","timePassed","color","time","count","length","method","headers","body","JSON","stringify","useEffect","Provider","value","getVelocity","putWinners","getWinners","Pagination","paginate","nextPage","prevPage","allPages","context","useContext","pageNamber","i","push","className","map","num","onClick","useStyles","makeStyles","theme","root","height","flexGrow","minWidth","transform","display","modal","padding","spacing","alignItems","justifyContent","Cars","deleteItem","selectItem","winnersObg","setModal","setTime","winner","setWinner","myRef","createRef","ARef","useRef","BRef","classes","rootRef","screenWidth","window","screen","width","current","style","carCharacteristics","start","Date","getTime","timer","setInterval","newDistance","velocity","name","clearInterval","setTimeout","ref","draw","version","xmlns","viewBox","preserveAspectRatio","fill","stroke","d","Modal","open","container","toFixed","CarsList","Array","from","document","querySelectorAll","currentData","catch","console","log","element","arr","find","el","findItem","lastDataIndex","Math","ceil","firstDataIndex","pageNumber","CreateCar","setData","alert","type","onChange","e","model","target","setCarModel","setCarColor","Navbar","isActiveLinkGarage","isActiveLinkWinners","to","get_random_color","sub","floor","random","toString","RaseResetGenerate","cars","callback","arr1","randNumber","giveRandomIndex","UpdateCar","Garage","WinnerItem","PaginationWinners","marginLeft","Spinner","CircularProgress","Winners","number","setNumber","sort","b","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.00fa1426.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nexport const ApiContext = React.createContext()\r\n\r\nconst initialState = {\r\n    data: [],\r\n    id: null,\r\n    currentPage: 1,\r\n    currentDataCar:[],\r\n    dataPage: 7,\r\n    currentWinnersPage: 1,\r\n    dataWinnersPage: 10,\r\n    winners: [],\r\n    velosity: {},\r\n    carArr:[]\r\n}\r\n\r\nexport default function ContextProvider({ children }) {\r\n    const [state, setState] = useState(initialState)\r\n\r\n\r\n    useEffect(() => {\r\n        getCar()\r\n    }, [])\r\n\r\n    function getCar() {\r\n        fetch(\"http://localhost:3000/garage\")\r\n            .then(data => data.json())\r\n            .then(res =>{\r\n                let curentData = res.slice(0,7)\r\n               setState({\r\n                ...state,\r\n                data: res,\r\n                currentDataCar:curentData\r\n            })\r\n            })\r\n    }\r\n    async function getVelocity(id, status) {\r\n        let url = `http://localhost:3000/engine?id=${id}&status=${status}`;\r\n        let rrr = await fetch(url);\r\n        let hhfg = await rrr.json();\r\n        return hhfg;\r\n    }\r\n\r\n    async function putWinners(id, wins, timePassed, color) {\r\n        const data = {\r\n            id: id,\r\n            wins: wins,\r\n            time: timePassed,\r\n            color: color,\r\n            count: 1,\r\n\r\n        }\r\n        await fetch(`http://localhost:3000/winners?id=${id}`)\r\n            .then(data => data.json())\r\n            .then(res => {\r\n                if (res.length !== 0) {\r\n                    fetch(`http://localhost:3000/winners/${id}`, {\r\n                        method: 'PUT',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify(data)\r\n                    })\r\n                } else {\r\n                    fetch(`http://localhost:3000/winners`, {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify(data)\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    async function getWinners() {\r\n\r\n        await fetch(\"http://localhost:3000/winners\")\r\n\r\n            .then(data => data.json())\r\n            .then(res => setState({\r\n                ...state,\r\n                winners: res\r\n            }))\r\n    }\r\n    return (\r\n        <ApiContext.Provider value={{ state, setState, getCar, getVelocity, putWinners, getWinners }}>\r\n            {children}\r\n        </ApiContext.Provider>\r\n    )\r\n}","import React, { useContext } from 'react'\nimport { ApiContext } from '../../context/Context';\nimport './Pagination.scss'\n\n\nexport default function Pagination({ paginate, nextPage, prevPage, allPages }) {\n    const context = useContext(ApiContext);\n\n\n    const pageNamber = [];\n\n    for (let i = 1; i <= allPages; i++) {\n        pageNamber.push(i)\n\n    }\n    return (\n        <div>\n            <h4>Page № {context.state.currentPage}</h4>\n            <div className='pagination-container'>\n            {\n                pageNamber.map((num, i) => <div className='pagination-num' key={i} onClick={() => paginate(num)}>{num}</div>)\n            }\n            </div>\n            <div className='pagination-buttons'>\n            <button onClick={prevPage}>Prev</button>\n            <button onClick={nextPage}>Next</button>\n            </div>\n        </div>\n    )\n}\n\n\n","import React, { useContext, useState } from 'react';\r\nimport { ApiContext } from \"../../context/Context\";\r\nimport './Cars.scss';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: 300,\r\n        flexGrow: 1,\r\n        minWidth: 300,\r\n        transform: 'translateZ(0)',\r\n        '@media all and (-ms-high-contrast: none)': {\r\n            display: 'none',\r\n\r\n        },\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        padding: theme.spacing(1),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n}));\r\n\r\nexport default function Cars({ data, deleteItem, selectItem, winnersObg }) {\r\n    const [modal, setModal] = useState(false)\r\n    const [time, setTime] = useState(null)\r\n    const [winner, setWinner] = useState([])\r\n    const context = useContext(ApiContext);\r\n    const myRef = React.createRef();\r\n    const ARef = React.useRef();\r\n    const BRef = React.useRef();\r\n    const classes = useStyles();\r\n    const rootRef = React.useRef(null);\r\n\r\n    const screenWidth = window.screen.width - 220;\r\n    //  let speed = Math.random() * (80 - 50) + 50;\r\n    async function draw(id, status) {\r\n        ARef.current.style.color = \"rgb(73, 70, 70)\"\r\n        BRef.current.style.color = \"red\"\r\n        let carCharacteristics = await context.getVelocity(id, status);\r\n\r\n        let start = new Date().getTime();\r\n        let timer = setInterval(function () {\r\n            let timePassed = new Date().getTime() - start;\r\n            let newDistance = (0 + (timePassed / 1000) * carCharacteristics.velocity)\r\n\r\n            try {\r\n                myRef.current.style.transform = 'translateX(' + newDistance + 'px)';\r\n                // myRef.current.style.transform = 'translateX(' + Math.min(timePassed / 5) + 'px)';\r\n                if (newDistance > screenWidth) {\r\n                    context.putWinners(data.id, data.name, timePassed, data.color)\r\n                    setWinner(data)\r\n                    clearInterval(timer);\r\n                    setModal(true)\r\n                    setTime(timePassed)\r\n                    ARef.current.style.color = \"\"\r\n                    BRef.current.style.color = \"\"\r\n                };\r\n            } catch {\r\n                clearInterval(timer);\r\n            }\r\n        }, 20);\r\n    }\r\n\r\n    setTimeout(() => {\r\n        setModal(false)\r\n    }, 1000);\r\n\r\n\r\n    function stopBTN() {\r\n        ARef.current.style.color = \"\"\r\n        BRef.current.style.color = \"\"\r\n        myRef.current.style.transform = ''\r\n    }\r\n\r\n    return (\r\n        <div id={data.id} className='carsItem'>\r\n            <div className='flag-container'>\r\n                <div className='flag'></div>\r\n                <div className='stick'></div>\r\n            </div>\r\n\r\n            <div className='itemButton-block'>\r\n                <button className='btn' onClick={() => selectItem(data.id)}>select</button>\r\n                <button className='btn' onClick={() => deleteItem(data.id)}>remove</button>\r\n                <span>{data.name} </span>\r\n            </div>\r\n            <div className='itemContent'>\r\n\r\n                <button className='btn-A btn-letter' ref={ARef} onClick={() => draw(data.id, 'started')}>A</button>\r\n                <button className='btn-B btn-letter' ref={BRef} onClick={stopBTN}  >B</button>\r\n                {/* <img className='flag' src= */}\r\n                <div ref={myRef} className='SomeElementYouWantToAnimate'> <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"70px\" height=\"50px\" viewBox=\"0 0 1280.000000 640.000000\" preserveAspectRatio=\"xMidYMid meet\">\r\n                    <metadata>\r\n                        Created by potrace 1.15, written by Peter Selinger 2001-2017 </metadata>\r\n                    <g transform=\"translate(0.000000,640.000000) scale(0.100000,-0.100000)\" fill={data.color} stroke=\"none\">\r\n                        <path d=\"M3565 5336 c-106 -30 -101 -26 -108 -111 -4 -42 -9 -80 -12 -85 -6 -10 -246 -105 -590 -234 -448 -167 -1052 -415 -1173 -483 -78 -43 -193 -91 -250 -104 -23 -5 -98 -14 -165 -19 -67 -6 -167 -19 -222 -30 -154 -31 -340 -49 -563 -57 l-203 -6 -43 -66 c-59 -91 -60 -95 -26 -130 37 -37 38 -65 3 -150 -25 -62 -27 -78 -31 -256 l-4 -190 -38 -32 c-91 -78 -133 -209 -134 -418 0 -194 11 -396 26 -482 13 -71 14 -74 72 -122 69 -58 130 -129 158 -184 64 -126 534 -211 1384 -250 l92 -4 -6 119 c-6 142 8 256 49 383 112 352 394 622 756 722 90 26 112 28 278 28 165 0 188 -2 278 -27 201 -56 361 -152 504 -302 140 -145 222 -293 274 -492 21 -79 24 -109 23 -279 -1 -127 -6 -214 -16 -263 l-15 -73 3006 7 c1653 4 3007 8 3009 9 1 1 -8 37 -20 81 -19 67 -22 105 -22 259 -1 166 1 187 27 279 117 421 467 736 885 797 119 17 325 7 432 -21 239 -63 453 -205 601 -399 70 -92 154 -267 185 -386 24 -88 27 -119 27 -260 1 -116 -4 -181 -16 -234 -10 -41 -16 -75 -15 -76 2 -1 62 2 133 6 266 16 458 45 525 79 48 24 97 81 127 146 l24 52 -16 157 c-15 152 -15 163 4 284 63 388 50 680 -35 802 -134 193 -526 336 -1429 519 -737 149 -1322 209 -2033 210 -228 0 -226 0 -347 85 -187 131 -1045 607 -1471 815 -383 187 -788 281 -1439 332 -208 17 -1106 16 -1400 0 -121 -7 -314 -19 -430 -27 -302 -22 -286 -22 -341 10 -140 81 -187 94 -269 71z m1885 -333 c6 -37 38 -238 71 -446 32 -209 66 -422 75 -474 9 -52 15 -96 13 -97 -11 -9 -1699 29 -1951 44 -206 13 -417 36 -485 54 -98 26 -198 119 -249 231 -35 75 -36 172 -5 255 17 45 30 61 68 86 83 54 135 80 253 127 341 136 858 230 1460 267 269 16 270 16 511 18 l227 2 12 -67z m630 47 c264 -18 777 -110 1029 -186 186 -56 445 -188 756 -387 211 -134 274 -181 250 -185 -75 -12 -133 -50 -162 -106 -19 -35 -21 -136 -4 -179 l11 -27 -907 2 -906 3 -59 160 c-110 302 -298 878 -298 916 0 6 95 2 290 -11z\" />\r\n                        <path d=\"M2633 3125 c-223 -40 -410 -141 -568 -306 -132 -138 -213 -283 -262 -467 -22 -83 -26 -119 -26 -247 -1 -169 10 -236 65 -382 87 -230 271 -436 493 -551 85 -44 178 -78 271 -98 107 -23 312 -23 419 1 392 84 699 375 802 761 23 86 26 120 27 254 1 158 -5 199 -46 330 -98 310 -355 567 -668 669 -150 50 -354 64 -507 36z m350 -301 c249 -56 457 -247 543 -499 25 -72 28 -95 28 -220 1 -153 -15 -228 -74 -345 -94 -186 -283 -337 -485 -386 -96 -24 -268 -24 -360 0 -320 84 -544 355 -562 681 -20 359 209 673 558 765 94 24 253 26 352 4z\" />\r\n                        <path d=\"M2600 2697 c-36 -13 -85 -36 -109 -51 l-44 -28 116 -115 c81 -82 120 -114 131 -110 14 6 16 29 16 167 0 186 6 178 -110 137z\" />\r\n                        <path d=\"M2920 2561 c0 -139 2 -162 16 -168 11 -4 50 28 130 108 l115 114 -28 22 c-34 28 -138 70 -193 79 l-40 7 0 -162z\" />\r\n                        <path d=\"M2282 2448 c-28 -36 -92 -191 -92 -225 0 -10 34 -13 165 -13 151 0 165 1 165 18 0 15 -206 232 -221 232 -4 0 -11 -6 -17 -12z\" />\r\n                        <path d=\"M3222 2351 c-62 -59 -112 -115 -112 -124 0 -15 17 -17 165 -17 131 0 165 3 165 13 0 40 -69 205 -95 227 -7 6 -48 -27 -123 -99z\" />\r\n                        <path d=\"M2781 2332 c-12 -22 11 -62 34 -62 8 0 21 10 29 22 20 28 4 58 -29 58 -13 0 -29 -8 -34 -18z\" />\r\n                        <path d=\"M2749 2161 c-32 -33 -37 -67 -14 -110 29 -57 104 -64 151 -14 53 57 9 153 -71 153 -27 0 -44 -8 -66 -29z\" />\r\n                        <path d=\"M2570 2125 c-26 -32 13 -81 48 -59 24 16 27 45 6 61 -23 17 -39 16 -54 -2z\" />\r\n                        <path d=\"M3006 2124 c-20 -19 -20 -38 -2 -54 23 -19 61 -8 64 18 7 44 -32 67 -62 36z\" />\r\n                        <path d=\"M2190 1975 c0 -29 41 -140 72 -194 l31 -53 117 117 c71 71 116 123 113 131 -4 11 -40 14 -169 14 -141 0 -164 -2 -164 -15z\" />\r\n                        <path d=\"M3110 1972 c0 -9 51 -68 114 -131 l114 -114 31 54 c30 51 71 165 71 195 0 11 -31 14 -165 14 -151 0 -165 -1 -165 -18z\" />\r\n                        <path d=\"M2780 1901 c-7 -15 -5 -24 8 -41 32 -40 85 -4 62 41 -14 25 -56 25 -70 0z\" />\r\n                        <path d=\"M2562 1697 c-61 -62 -112 -115 -112 -119 0 -18 208 -108 249 -108 7 0 11 54 11 164 0 140 -2 165 -16 170 -9 3 -16 6 -17 6 -1 0 -53 -51 -115 -113z\" />\r\n                        <path d=\"M2933 1803 c-15 -6 -19 -333 -4 -333 46 0 251 88 251 108 0 9 -223 232 -230 231 -3 0 -11 -3 -17 -6z\" />\r\n                        <path d=\"M10700 3119 c-390 -84 -696 -376 -797 -759 -31 -117 -41 -292 -24 -411 33 -227 150 -453 318 -609 267 -250 643 -344 993 -249 117 32 283 118 380 196 487 396 518 1128 67 1560 -97 93 -166 140 -290 198 -137 64 -235 86 -407 91 -120 3 -162 0 -240 -17z m445 -313 c238 -81 409 -258 486 -506 30 -96 33 -289 5 -388 -110 -400 -513 -637 -911 -536 -149 38 -313 147 -402 267 -176 238 -203 533 -71 797 34 69 60 103 138 180 77 78 111 104 181 139 129 65 207 81 364 77 109 -3 143 -7 210 -30z\" />\r\n                        <path d=\"M10703 2700 c-54 -19 -153 -71 -153 -80 0 -3 51 -57 114 -119 80 -80 119 -112 130 -108 14 5 16 29 16 167 l0 160 -27 -1 c-16 0 -52 -9 -80 -19z\" />\r\n                        <path d=\"M11020 2561 c0 -139 2 -162 16 -168 22 -8 247 216 234 232 -17 20 -163 84 -207 91 l-43 7 0 -162z\" />\r\n                        <path d=\"M10366 2424 c-29 -44 -76 -165 -76 -194 0 -19 7 -20 165 -20 126 0 165 3 165 13 0 7 -51 63 -114 126 l-114 114 -26 -39z\" />\r\n                        <path d=\"M11313 2348 c-61 -62 -109 -119 -106 -125 6 -15 333 -19 333 -4 0 45 -88 241 -108 241 -4 0 -57 -51 -119 -112z\" />\r\n                        <path d=\"M10882 2338 c-17 -17 -15 -32 7 -52 16 -14 23 -15 41 -6 31 17 24 64 -10 68 -14 2 -31 -3 -38 -10z\" />\r\n                        <path d=\"M10846 2159 c-68 -81 17 -194 110 -144 89 48 56 175 -46 175 -30 0 -44 -6 -64 -31z\" />\r\n                        <path d=\"M10670 2126 c-19 -23 -8 -61 18 -64 44 -7 67 32 36 62 -19 20 -38 20 -54 2z\" />\r\n                        <path d=\"M11106 2127 c-21 -16 -18 -45 7 -61 37 -23 77 35 41 61 -10 7 -21 13 -24 13 -3 0 -14 -6 -24 -13z\" />\r\n                        <path d=\"M10290 1970 c0 -29 43 -141 74 -195 l28 -48 116 116 c81 81 113 120 109 131 -6 14 -29 16 -167 16 -152 0 -160 -1 -160 -20z\" />\r\n                        <path d=\"M11207 1978 c-3 -7 47 -66 111 -130 l116 -118 27 43 c27 44 79 177 79 203 0 12 -28 14 -164 14 -122 0 -166 -3 -169 -12z\" />\r\n                        <path d=\"M10881 1901 c-14 -25 -5 -48 20 -56 27 -9 51 13 47 44 -4 34 -51 43 -67 12z\" />\r\n                        <path d=\"M10662 1697 c-61 -62 -112 -115 -112 -119 0 -20 201 -108 247 -108 10 0 13 34 13 164 0 140 -2 165 -16 170 -9 3 -16 6 -17 6 -1 0 -53 -51 -115 -113z\" />\r\n                        <path d=\"M11033 1803 c-10 -3 -13 -47 -13 -169 0 -90 4 -164 8 -164 36 0 186 61 239 98 16 10 -216 242 -234 235z\" />\r\n                    </g>\r\n                </svg>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal\r\n                open={modal}\r\n                className={classes.modal}\r\n                container={() => rootRef.current}>\r\n                <div>\r\n                    {/* <h2><b>{data.name}</b> finished in {(time / 1000).toFixed(2)} second</h2> */}\r\n                    <h2><b>   {winner.name} </b> finished in {(time / 1000).toFixed(2)} second</h2>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n    // function draw (){\r\n    //     setMove(true)\r\n    //      }\r\n\r\n    // function getEl() {\r\n    //     var element = document.querySelector('.SomeElementYouWantToAnimate');\r\n    //     return element\r\n    // }\r\n\r\n    // var start = null;\r\n    // var element = getEl();\r\n\r\n    // function step(timestamp) {\r\n\r\n    //     if (!start) start = timestamp;\r\n    //     var progress = timestamp - start;\r\n    //     console.log( typeof(progress ))\r\n    //     console.log(progress)\r\n    //     console.log(timestamp)\r\n    //     console.log(typeof(timestamp))\r\n    //     if (element) {\r\n    //         element.style.transform = 'translateX(' + Math.min(progress / 10, 1000) + 'px)';\r\n    //     }\r\n    //     if (progress < 2000) {\r\n    //         window.requestAnimationFrame(step);\r\n    //     }\r\n    // }\r\n\r\n    // function draw() {\r\n    //     console.log(myRef.current.style)\r\n    //     let start = Date.now();\r\n\r\n    //     let timer = setInterval(function () {\r\n    //         let timePassed = Date.now() - start;\r\n    //         myRef.current.style.transform = 'translateX(' + Math.min(timePassed / 5) + 'px)';\r\n\r\n    //           if (timePassed > screenWidth*4) clearInterval(timer);\r\n\r\n    //     }, 20);\r\n    // }\r\n\r\n\r\n    //     let start = new Date().getTime()\r\n    //     console.log(start)\r\n    //     function draw() {\r\n    //     let  curentTime=new Date().getTime()\r\n    //     console.log(curentTime)\r\n    //         let newDistance = (2 +((curentTime-start)/1000)*70)\r\n\r\n    //             //myRef.current.style.transform = 'translateX(' + Math.min(timePassed / 5) + 'px)';\r\n    //              myRef.current.style.transform = 'translateX(' + newDistance + 'px)';\r\n\r\n    //               if (newDistance < screenWidth){\r\n    //  window.requestAnimationFrame(draw)}\r\n    //         };\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { ApiContext } from \"../../context/Context\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport Cars from './Cars';\r\nimport './carsList.scss'\r\n\r\nlet winnersObg = [];\r\n\r\nexport default function CarsList() {\r\n    const context = useContext(ApiContext);\r\n\r\n    useEffect(() => {\r\n        getCarPict()\r\n        setCurrentData()\r\n    }, [context.state.currentPage])\r\n\r\n\r\n    function getCarPict() {\r\n        const cars = Array.from(document.querySelectorAll('.SomeElementYouWantToAnimate'))\r\n        return cars\r\n    }\r\n\r\n    const deleteItem = async (id) => {\r\n        await fetch(`http://localhost:3000/garage/${id}`, {\r\n            method: 'DELETE',\r\n        })\r\n        await fetch(`http://localhost:3000/winners/${id}`, {\r\n            method: 'DELETE',\r\n        })\r\n            .then(res => res.json())\r\n            .catch(console.log('e'))\r\n        context.getCar()\r\n    };\r\n\r\n    const findItem = (arr, id) => arr.find((el) => el.id === id);\r\n    const selectItem = (id) => {\r\n        let element = findItem(context.state.data, id).id;\r\n        context.setState({\r\n            ...context.state,\r\n            id: element\r\n        });\r\n    };\r\n\r\n    const lastDataIndex = context.state.currentPage * context.state.dataPage;\r\n    const allPages = Math.ceil(context.state.data.length / context.state.dataPage);\r\n    const firstDataIndex = lastDataIndex - context.state.dataPage;\r\n    const currentData = context.state.data.slice(firstDataIndex, lastDataIndex);\r\n    const paginate = pageNumber => context.setState({\r\n        ...context.state,\r\n        currentPage: pageNumber\r\n    })\r\n\r\n    const nextPage = () => {\r\n        if (context.state.currentPage === allPages) {\r\n            return\r\n        } else {\r\n            context.setState({\r\n                ...context.state,\r\n                currentPage: context.state.currentPage + 1\r\n            })\r\n        }\r\n    }\r\n\r\n    function setCurrentData() {\r\n        context.setState({\r\n            ...context.state,\r\n            currentDataCar: currentData\r\n        })\r\n    }\r\n\r\n    function prevPage() {\r\n        if (context.state.currentPage === 1) {\r\n            return\r\n        } else {\r\n            context.setState({\r\n                ...context.state,\r\n                currentPage: context.state.currentPage - 1\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"carsList\">\r\n            <h3>Garage ({context.state.data.length})</h3>\r\n            <Pagination paginate={paginate} nextPage={nextPage} prevPage={prevPage} allPages={allPages} />\r\n            {currentData.map(el => <Cars key={el.id} data={el} winnersObg={winnersObg} deleteItem={deleteItem} selectItem={selectItem} />)}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport { ApiContext } from \"../../context/Context\";\r\n\r\nexport default function CreateCar() {\r\n    const context = useContext(ApiContext);\r\n\r\n    const [data, setData] = useState({ color: '', name: '' })\r\n    function setCarColor(e) {\r\n        let color = e.target.value\r\n        if (!color) return\r\n        setData({\r\n            ...data,\r\n            color: `${color}`\r\n        })\r\n    }\r\n\r\n    function setCarModel(e) {\r\n        let model = e.target.value\r\n        if (!model) return\r\n        setData({\r\n            ...data,\r\n            name: model\r\n        })\r\n    }\r\n\r\n    async function createCar() {\r\n        if (!data.name) {\r\n            alert('Write model')\r\n        } else {\r\n            await fetch('http://localhost:3000/garage', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n        }\r\n        context.getCar()\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <input type='text' onChange={(e) => setCarModel(e)} />\r\n            <input type=\"color\" onChange={(e) => setCarColor(e)} />\r\n            <button className=\"btn\" onClick={createCar}>Create car</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Navbar.scss'\r\n\r\nconst Navbar = ({isActiveLinkGarage=false, isActiveLinkWinners=false}) => {\r\n    return (\r\n        <div>\r\n            <div className='navbar'>\r\n                <div className=\"wrapper-navbar container\">\r\n                    <ul>\r\n                        <Link className='Link' to='/'>ASYNC-RACE</Link>\r\n                        <Link className={!isActiveLinkGarage ? 'Link' : 'Link Link__active'} to='/garage'>Garage</Link>\r\n                        <Link className={!isActiveLinkWinners ? 'Link' : 'Link Link__active'} to='/winners'>Winners</Link>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Navbar;","import { Modal } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { ApiContext } from \"../../context/Context\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: 300,\r\n        flexGrow: 1,\r\n        minWidth: 300,\r\n        transform: 'translateZ(0)',\r\n        '@media all and (-ms-high-contrast: none)': {\r\n            display: 'none',\r\n\r\n        },\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        padding: theme.spacing(1),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n}));\r\n\r\nlet name = ['Tesla Cybertruck', 'Mersedes Bebz', 'BMW I8', 'Ford F150', 'Lada NIVA', 'Audi A4', 'Bentley', 'Fiat 500', 'Kia NIRO',\r\n'Tesla S', 'Mersedes S63', 'BMW X6', 'Ford Raptor','Tesla X', 'Lada VESTA', 'Kia Seltos','Tesla S Plaid', 'Audi R8', 'Bentley Muslanne','BMW M4', 'Fiat TIPO', 'Kia k5'];\r\nfunction get_random_color() {\r\n    var color = \"\";\r\n    for (var i = 0; i < 3; i++) {\r\n        var sub = Math.floor(Math.random() * 256).toString(16);\r\n        color += (sub.length === 1 ? \"0\" + sub : sub);\r\n    }\r\n    return \"#\" + color;\r\n}\r\n\r\nexport default function RaseResetGenerate() {\r\n    const [modal, setModal] = useState(false)\r\n    const [time, setTime] = useState(null)\r\n    const context = useContext(ApiContext);\r\n    useEffect(() => {\r\n        getCurrentData()\r\n    },[] )\r\n\r\nfunction getCurrentData(){\r\n    return context.state.currentPage\r\n}\r\n\r\n    const classes = useStyles();\r\n    const rootRef = React.useRef(null);\r\n    console.log(context.state.currentDataCar)\r\n\r\n    const cars = Array.from(document.querySelectorAll('.SomeElementYouWantToAnimate'))\r\n    async function createCar() {\r\n        const data = {\r\n            color: '',\r\n            name: ''\r\n        }\r\n        for (let i = 0; i < 50; i++) {\r\n            function giveRandomIndex(callback, arr1) {\r\n                let randNumber = Math.floor(Math.random() * arr1.length);\r\n                data.color = callback()\r\n                data.name = arr1[randNumber]\r\n            }\r\n            giveRandomIndex(get_random_color, name)\r\n            if (data) {\r\n                await fetch('http://localhost:3000/garage', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                })\r\n            }\r\n            context.getCar()\r\n        }\r\n    }\r\n\r\n    const screenWidth = window.screen.width - 220;\r\n\r\n    async function raseCar() {\r\n\r\n\r\n        let winner = null;\r\n        for (let i = 0; i < cars.length; i++) {\r\nconsole.log(context.state.currentDataCar)\r\n            let carCharacteristics = await context.getVelocity(context.state.currentDataCar[i].id, 'started');\r\n            let start = new Date().getTime();\r\n            // eslint-disable-next-line no-loop-func\r\n            let timer = setInterval(function () {\r\n                let timePassed = new Date().getTime() - start;\r\n                let newDistance = (0 + (timePassed / 1000) * carCharacteristics.velocity)\r\n\r\n                try {\r\n                    cars[i].style.transform = 'translateX(' + newDistance + 'px)';\r\n                    if (newDistance > screenWidth) {\r\n                        if (!winner) {\r\n                            winner = cars[i]\r\n                            context.putWinners(context.state.currentDataCar[i].id, context.state.currentDataCar[i].name, timePassed, context.state.currentDataCar[i].color)\r\n                            setModal(true)\r\n                            clearInterval(timer)\r\n                            setTime(timePassed)\r\n                        } else {\r\n                            clearInterval(timer);\r\n                            setModal(false)\r\n                        }\r\n                        //\r\n                        //     context.state.currentDataCar[i].name,\r\n                        //     timePassed, context.state.currentDataCar[i].color)\r\n\r\n                        //\r\n                        // setTime(timePassed)\r\n                    };\r\n                } catch {\r\n                    clearInterval(timer);\r\n                }\r\n            }, 20);\r\n        }\r\n    }\r\n\r\n    setTimeout(() => {\r\n        setModal(false)\r\n    }, 3000);\r\n\r\n    function resetCar() {\r\n\r\n        for (let i = 0; i < cars.length; i++) {\r\n            try {\r\n                cars[i].style.transform = '';\r\n                // ARef.current.style.color = \"\"\r\n                // BRef.current.style.color = \"\"\r\n\r\n            } catch {\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button className='btn' onClick={raseCar}>Race</button>\r\n            <button className='btn' onClick={resetCar}>Reset</button>\r\n            <button className='btn' onClick={createCar}>Generate cars</button>\r\n            <Modal\r\n                open={modal}\r\n                className={classes.modal}\r\n                container={() => rootRef.current}>\r\n                <div>\r\n                    {/* <h2><b>{data.name}</b> finished in {(time / 1000).toFixed(2)} second</h2> */}\r\n                    <h2>The best time  {(time / 1000).toFixed(2)} second</h2>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\n// const requests = Array(1000)\r\n//   .fill(this.garageService.generateRandomCar())\r\n//   .map(opt => this.api.createCar(opt));\r\n// await Promise.all(requests)\r\n\r\n//  context.state.currentDataCar.forEach(async (element) => {\r\n//     console.log(element.id)\r\n//       let carCharacteristics = await context.getVelocity(element.id, 'started');\r\n//         let start = new Date().getTime();\r\n\r\n//         let timer = setInterval(function () {\r\n//             let timePassed = new Date().getTime() - start;\r\n//             let newDistance = (0 + (timePassed / 1000) * carCharacteristics.velocity)\r\n//             console.log(newDistance  )\r\n//             try {\r\n//                 element.style.transform = 'translateX(' + newDistance + 'px)';\r\n//                 // myRef.current.style.transform = 'translateX(' + Math.min(timePassed / 5) + 'px)';\r\n//                 if (newDistance > screenWidth) {\r\n//                     context.putWinners(element.id, element.name, timePassed, element.color)\r\n//                     clearInterval(timer);\r\n//                     // setModal(true)\r\n//                     // setTime(timePassed)\r\n//                 };\r\n//             } catch {\r\n//                 clearInterval(timer);\r\n//             }\r\n//         }, 20);\r\n//        });","import React, { useState, useContext  } from 'react';\r\nimport { ApiContext } from \"../../context/Context\";\r\n\r\n\r\n\r\nexport default function UpdateCar() {\r\n    const context = useContext(ApiContext);\r\n    const [data, setData] = useState({ color: '', name: '' })\r\n    function setCarColor(e) {\r\n        let color = e.target.value\r\n        if (!color) return\r\n        setData({\r\n            ...data,\r\n            color: color\r\n        })\r\n    }\r\n\r\n    function setCarModel(e) {\r\n        let model = e.target.value\r\n        if (!model) return\r\n        setData({\r\n            ...data,\r\n            name: model\r\n        })\r\n    }\r\n\r\n\r\n\r\n    async function updateCar() {\r\n\r\n          let id=context.state.id\r\n          console.log(id)\r\n        await fetch(`http://localhost:3000/garage/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n          context.getCar()\r\n    }\r\n    return (\r\n        <div>\r\n            <input type='text' onChange={(e) => setCarModel(e)} />\r\n            <input type=\"color\"  onChange={(e) => setCarColor(e)} />\r\n            <button className=\"btn\" onClick={updateCar} >Update car</button>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React  from 'react'\r\n\r\nimport CarsList from '../createCar/CarsList';\r\nimport CreateCar from '../createCar/CreateCar';\r\nimport Navbar from '../navbar/Navbar';\r\nimport RaseResetGenerate from '../race-recet-generate/RaseResetGenerate';\r\nimport UpdateCar from '../updateCar/UpdateCar';\r\n\r\n\r\nexport default function Garage() {\r\n\r\n    return (\r\n        <div>\r\n            <Navbar isActiveLinkGarage={true} />\r\n            <div className=\"wrapper\">\r\n                <CreateCar />\r\n                <UpdateCar />\r\n                <RaseResetGenerate />\r\n                <CarsList />\r\n            </div></div>\r\n    )\r\n}\r\n","import React from 'react';\n\nexport default function WinnerItem({ wins, time, color, id, count, i }) {\n\n    return (\n        <div key={id}>\n            <div className='winners'>\n\n                <div className='  winners-car'> <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"70px\" height=\"50px\" viewBox=\"0 0 1280.000000 640.000000\" preserveAspectRatio=\"xMidYMid meet\">\n                    <metadata>\n                        Created by potrace 1.15, written by Peter Selinger 2001-2017 </metadata>\n                    <g transform=\"translate(0.000000,640.000000) scale(0.100000,-0.100000)\" fill={color} stroke=\"none\">\n                        <path d=\"M3565 5336 c-106 -30 -101 -26 -108 -111 -4 -42 -9 -80 -12 -85 -6 -10 -246 -105 -590 -234 -448 -167 -1052 -415 -1173 -483 -78 -43 -193 -91 -250 -104 -23 -5 -98 -14 -165 -19 -67 -6 -167 -19 -222 -30 -154 -31 -340 -49 -563 -57 l-203 -6 -43 -66 c-59 -91 -60 -95 -26 -130 37 -37 38 -65 3 -150 -25 -62 -27 -78 -31 -256 l-4 -190 -38 -32 c-91 -78 -133 -209 -134 -418 0 -194 11 -396 26 -482 13 -71 14 -74 72 -122 69 -58 130 -129 158 -184 64 -126 534 -211 1384 -250 l92 -4 -6 119 c-6 142 8 256 49 383 112 352 394 622 756 722 90 26 112 28 278 28 165 0 188 -2 278 -27 201 -56 361 -152 504 -302 140 -145 222 -293 274 -492 21 -79 24 -109 23 -279 -1 -127 -6 -214 -16 -263 l-15 -73 3006 7 c1653 4 3007 8 3009 9 1 1 -8 37 -20 81 -19 67 -22 105 -22 259 -1 166 1 187 27 279 117 421 467 736 885 797 119 17 325 7 432 -21 239 -63 453 -205 601 -399 70 -92 154 -267 185 -386 24 -88 27 -119 27 -260 1 -116 -4 -181 -16 -234 -10 -41 -16 -75 -15 -76 2 -1 62 2 133 6 266 16 458 45 525 79 48 24 97 81 127 146 l24 52 -16 157 c-15 152 -15 163 4 284 63 388 50 680 -35 802 -134 193 -526 336 -1429 519 -737 149 -1322 209 -2033 210 -228 0 -226 0 -347 85 -187 131 -1045 607 -1471 815 -383 187 -788 281 -1439 332 -208 17 -1106 16 -1400 0 -121 -7 -314 -19 -430 -27 -302 -22 -286 -22 -341 10 -140 81 -187 94 -269 71z m1885 -333 c6 -37 38 -238 71 -446 32 -209 66 -422 75 -474 9 -52 15 -96 13 -97 -11 -9 -1699 29 -1951 44 -206 13 -417 36\n-485 54 -98 26 -198 119 -249 231 -35 75 -36 172 -5 255 17 45 30 61 68 86 83 54 135 80 253 127 341 136 858 230 1460 267 269 16 270 16 511 18 l227 2 12 -67z m630 47 c264 -18 777 -110 1029 -186 186 -56 445 -188 756 -387 211 -134 274 -181 250 -185 -75 -12 -133 -50 -162 -106 -19 -35 -21 -136 -4 -179 l11 -27 -907 2 -906 3 -59 160 c-110 302 -298 878 -298 916 0 6 95 2 290 -11z\"/>\n                        <path d=\"M2633 3125 c-223 -40 -410 -141 -568 -306 -132 -138 -213 -283 -262 -467 -22 -83 -26 -119 -26 -247 -1 -169 10 -236 65 -382 87 -230 271 -436 493 -551 85 -44 178 -78 271 -98 107 -23 312 -23 419 1 392 84 699 375 802 761 23 86 26 120 27 254 1 158 -5 199 -46 330 -98 310 -355 567 -668 669 -150 50 -354 64 -507 36z m350 -301 c249 -56 457 -247 543 -499 25 -72 28 -95 28 -220 1 -153 -15 -228 -74 -345 -94 -186 -283 -337 -485 -386 -96 -24 -268 -24 -360 0 -320 84 -544 355 -562 681 -20 359 209 673 558 765 94 24 253 26 352 4z\" />\n                        <path d=\"M2600 2697 c-36 -13 -85 -36 -109 -51 l-44 -28 116 -115 c81 -82 120 -114 131 -110 14 6 16 29 16 167 0 186 6 178 -110 137z\" />\n                        <path d=\"M2920 2561 c0 -139 2 -162 16 -168 11 -4 50 28 130 108 l115 114 -28 22 c-34 28 -138 70 -193 79 l-40 7 0 -162z\" />\n                        <path d=\"M2282 2448 c-28 -36 -92 -191 -92 -225 0 -10 34 -13 165 -13 151 0 165 1 165 18 0 15 -206 232 -221 232 -4 0 -11 -6 -17 -12z\" />\n                        <path d=\"M3222 2351 c-62 -59 -112 -115 -112 -124 0 -15 17 -17 165 -17 131 0 165 3 165 13 0 40 -69 205 -95 227 -7 6 -48 -27 -123 -99z\" />\n                        <path d=\"M2781 2332 c-12 -22 11 -62 34 -62 8 0 21 10 29 22 20 28 4 58 -29 58 -13 0 -29 -8 -34 -18z\" />\n                        <path d=\"M2749 2161 c-32 -33 -37 -67 -14 -110 29 -57 104 -64 151 -14 53 57 9 153 -71 153 -27 0 -44 -8 -66 -29z\" />\n                        <path d=\"M2570 2125 c-26 -32 13 -81 48 -59 24 16 27 45 6 61 -23 17 -39 16 -54 -2z\" />\n                        <path d=\"M3006 2124 c-20 -19 -20 -38 -2 -54 23 -19 61 -8 64 18 7 44 -32 67 -62 36z\" />\n                        <path d=\"M2190 1975 c0 -29 41 -140 72 -194 l31 -53 117 117 c71 71 116 123 113 131 -4 11 -40 14 -169 14 -141 0 -164 -2 -164 -15z\" />\n                        <path d=\"M3110 1972 c0 -9 51 -68 114 -131 l114 -114 31 54 c30 51 71 165 71 195 0 11 -31 14 -165 14 -151 0 -165 -1 -165 -18z\" />\n                        <path d=\"M2780 1901 c-7 -15 -5 -24 8 -41 32 -40 85 -4 62 41 -14 25 -56 25 -70 0z\" />\n                        <path d=\"M2562 1697 c-61 -62 -112 -115 -112 -119 0 -18 208 -108 249 -108 7 0 11 54 11 164 0 140 -2 165 -16 170 -9 3 -16 6 -17 6 -1 0 -53 -51 -115 -113z\" />\n                        <path d=\"M2933 1803 c-15 -6 -19 -333 -4 -333 46 0 251 88 251 108 0 9 -223 232 -230 231 -3 0 -11 -3 -17 -6z\" />\n                        <path d=\"M10700 3119 c-390 -84 -696 -376 -797 -759 -31 -117 -41 -292 -24 -411 33 -227 150 -453 318 -609 267 -250 643 -344 993 -249 117 32 283 118 380 196 487 396 518 1128 67 1560 -97 93 -166 140 -290 198 -137 64 -235 86 -407 91 -120 3 -162 0 -240 -17z m445 -313 c238 -81 409 -258 486 -506 30 -96 33 -289 5 -388 -110 -400 -513 -637 -911 -536 -149 38 -313 147 -402 267 -176 238 -203 533 -71 797 34 69 60 103 138 180 77 78 111 104 181 139 129 65 207 81 364 77 109 -3 143 -7 210 -30z\" />\n                        <path d=\"M10703 2700 c-54 -19 -153 -71 -153 -80 0 -3 51 -57 114 -119 80 -80 119 -112 130 -108 14 5 16 29 16 167 l0 160 -27 -1 c-16 0 -52 -9 -80 -19z\" />\n                        <path d=\"M11020 2561 c0 -139 2 -162 16 -168 22 -8 247 216 234 232 -17 20 -163 84 -207 91 l-43 7 0 -162z\" />\n                        <path d=\"M10366 2424 c-29 -44 -76 -165 -76 -194 0 -19 7 -20 165 -20 126 0 165 3 165 13 0 7 -51 63 -114 126 l-114 114 -26 -39z\" />\n                        <path d=\"M11313 2348 c-61 -62 -109 -119 -106 -125 6 -15 333 -19 333 -4 0 45 -88 241 -108 241 -4 0 -57 -51 -119 -112z\" />\n                        <path d=\"M10882 2338 c-17 -17 -15 -32 7 -52 16 -14 23 -15 41 -6 31 17 24 64 -10 68 -14 2 -31 -3 -38 -10z\" />\n                        <path d=\"M10846 2159 c-68 -81 17 -194 110 -144 89 48 56 175 -46 175 -30 0 -44 -6 -64 -31z\" />\n                        <path d=\"M10670 2126 c-19 -23 -8 -61 18 -64 44 -7 67 32 36 62 -19 20 -38 20 -54 2z\" />\n                        <path d=\"M11106 2127 c-21 -16 -18 -45 7 -61 37 -23 77 35 41 61 -10 7 -21 13 -24 13 -3 0 -14 -6 -24 -13z\" />\n                        <path d=\"M10290 1970 c0 -29 43 -141 74 -195 l28 -48 116 116 c81 81 113 120 109 131 -6 14 -29 16 -167 16 -152 0 -160 -1 -160 -20z\" />\n                        <path d=\"M11207 1978 c-3 -7 47 -66 111 -130 l116 -118 27 43 c27 44 79 177 79 203 0 12 -28 14 -164 14 -122 0 -166 -3 -169 -12z\" />\n                        <path d=\"M10881 1901 c-14 -25 -5 -48 20 -56 27 -9 51 13 47 44 -4 34 -51 43 -67 12z\" />\n                        <path d=\"M10662 1697 c-61 -62 -112 -115 -112 -119 0 -20 201 -108 247 -108 10 0 13 34 13 164 0 140 -2 165 -16 170 -9 3 -16 6 -17 6 -1 0 -53 -51 -115 -113z\" />\n                        <path d=\"M11033 1803 c-10 -3 -13 -47 -13 -169 0 -90 4 -164 8 -164 36 0 186 61 239 98 16 10 -216 242 -234 235z\" />\n                    </g>\n                </svg></div>\n                <div className='winners-name'>{wins} </div>\n                <div className='winners-win'>{count}</div>\n                <div className='winners-time'>{(time / 1000).toFixed(2)}</div>\n\n\n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { ApiContext } from '../../context/Context';\nimport './Pagination.scss'\n\nexport default function PaginationWinners({ paginate, nextPage, prevPage, allPages }) {\n    const context = useContext(ApiContext);\n    const pageNamber = [];\n\n    for (let i = 1; i <= allPages; i++) {\n        pageNamber.push(i)\n\n    }\n    return (\n        <div className='pagination-winner'>\n            <h4>Page № {context.state.currentWinnersPage}</h4>\n            <div className='pagination-container'>\n            {\n                pageNamber.map((num, i) => <div className='pagination-num' key={i} onClick={() => paginate(num)}>{num}</div>)\n            }\n            </div>\n            <div className='pagination-buttons'>\n            <button onClick={prevPage}>Prev</button>\n            <button onClick={nextPage}>Next</button>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      '& > * + *': {\n        marginLeft: theme.spacing(2),\n      },\n    },\n  }));\n\nexport default function Spinner() {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n        <CircularProgress />\n        <CircularProgress color=\"secondary\" />\n      </div>\n    )\n}\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport Navbar from '../navbar/Navbar'\r\nimport { ApiContext } from \"../../context/Context\";\r\nimport './Winners.scss'\r\nimport WinnerItem from './WinnerItem';\r\nimport PaginationWinners from '../Pagination/PaginationWinners';\r\nimport Spinner from '../Spinner';\r\n\r\nexport default function Winners() {\r\n    const [number, setNumber] = useState(false)\r\n    const context = useContext(ApiContext);\r\n\r\n    useEffect(() => {\r\n        try{\r\n            context.getWinners()\r\n        } catch(e){\r\nconsole.log(e)\r\n        }\r\n      //  return () => context.getWinners()\r\n\r\n\r\n    }, [])\r\n\r\n    function sortNumber() {\r\n        setNumber(!number)\r\n    }\r\n    function sortTime() {\r\n        setNumber(!number)\r\n    }\r\n\r\n    function sortWinners(a, b) {\r\n        if (a.time > b.time) {\r\n            return 1\r\n        } else { return -1 }\r\n    }\r\n\r\n    function sortWinners2(a, b) {\r\n        if (a.time < b.time) {\r\n            return -1\r\n        } else { return -1 }\r\n    }\r\n\r\n    if (!context.state.winners) {\r\n        return <Spinner />\r\n    }\r\n\r\n    const lastDataIndex = context.state.currentWinnersPage * context.state.dataWinnersPage;\r\n    const allPages = Math.ceil(context.state.winners.length / context.state.dataWinnersPage);\r\n    const firstDataIndex = lastDataIndex - context.state.dataWinnersPage;\r\n    const currentData = context.state.winners.slice(firstDataIndex, lastDataIndex);\r\n\r\n    const paginate = pageNumber => context.setState({\r\n        ...context.state,\r\n        currentWinnersPage: pageNumber\r\n    })\r\n\r\n    const nextPage = () => {\r\n        if (context.state.currentWinnersPage === allPages) {\r\n            return\r\n        } else {\r\n            context.setState({\r\n                ...context.state,\r\n                currentWinnersPage: context.state.currentWinnersPage + 1\r\n            })\r\n        }\r\n    }\r\n\r\n    function prevPage() {\r\n        if (context.state.currentWinnersPage === 1) {\r\n            return\r\n        } else {\r\n            context.setState({\r\n                ...context.state,\r\n                currentWinnersPage: context.state.currentWinnersPage - 1\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div  >\r\n            <Navbar isActiveLinkWinners={true} />\r\n            <h3>Winners ({context.state.winners.length})</h3>\r\n            <div className='winners-row'>\r\n                <div className='winners-car'>Car</div>\r\n                <div className='winners-name'>Name</div>\r\n                <div className='winners-win'>Wins</div>\r\n                <div className='winners-time' onClick={sortTime}>Time</div>\r\n            </div>\r\n            <ol className='winners-container'>\r\n                {currentData.sort(number ? sortWinners : sortWinners2).map((el, i) => {\r\n                    return <li><WinnerItem key={ i} {...el} i={i} /></li>\r\n                })\r\n                }\r\n            </ol>\r\n            <PaginationWinners paginate={paginate} nextPage={nextPage} prevPage={prevPage} allPages={allPages} />\r\n        </div>\r\n    )\r\n}\r\n","import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport Garage from './components/garage/Garage';\n\nimport Winners from './components/winners/Winners';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n\n   <Switch>\n <Route exact path='/' component={Garage}/>\n <Route path='/garage' component={Garage}/>\n <Route path='/winners' component={Winners}/>\n </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport ContextProvider from './context/Context';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <ContextProvider>\n    <App />\n    </ContextProvider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}